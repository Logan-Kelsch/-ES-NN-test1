declare upper;
declare once_per_bar;

input _up = "up";
input _dn = "dn";
input _in = "in";

def lowest_k = Lowest(low, 18);
def c1 = close - lowest_k;
def c2 = Highest(high, 18) - lowest_k;
def FastK = if c2 != 0 then c1 / c2 * 100 else 0;
def result = if Highest(high, 12) == Lowest(low, 12) then -100 else (Highest(high, 12) - close) / (Highest(high, 12) - Lowest(low, 12)) * (-100);

def FullK = MovingAverage(AverageType.SIMPLE, FastK, 1);
def FullD = MovingAverage(AverageType.SIMPLE, FullK, 3);
def diffKD = FullK - FullD;
def OB = FullK >= 80 && FullD >= 80;
def OS = FullD <= 20 && FullK <= 20;
def vol = volume;
def s15 = close - open[2];
def s30 = close - open[5];
def s60 = close - open[11];
plot ToD = SecondsFromTime(0) / 60;
def Inertias = (volume / SimpleMovingAvg(volume, 6)) * Inertia(close - (Highest(high, 6) + Lowest(low, 6)) / 2 + ExpAverage(close, 6) / 2, 6);
def percBB = (close - BollingerBands(close, 0, 12, -1.0, 1.0, AverageType.SIMPLE).LowerBand) / (BollingerBands(close, 0, 12, -1.0, 1.0, AverageType.SIMPLE).UpperBand - BollingerBands(close, 0, 12, -1.0, 1.0, AverageType.SIMPLE).LowerBand) * 100;
def spreadRSI = (50 * ((if MovingAverage(AverageType.WILDERS, AbsValue(high - high[1]), 12) != 0 then MovingAverage(AverageType.WILDERS, high - high[1], 12) / MovingAverage(AverageType.WILDERS, AbsValue(high - high[1]), 12) else 0) + 1)) - 50 * ((if MovingAverage(AverageType.WILDERS, AbsValue(low - low[1]), 12) != 0 then MovingAverage(AverageType.WILDERS, low - low[1], 12) / MovingAverage(AverageType.WILDERS, AbsValue(low - low[1]), 12) else 0) + 1);
def ADX = DMI(12, AverageType.WILDERS).ADX;
plot rsi = reference RSI(12);
def WPercent = if result > 0 then 0 else result;
def acc = (close - close[12]) - (close[6] - close[18]);
def bull15 = if (close[-3]-close)/stdev(close-close[6],48) >= 1 then 1 else 0;
def bear15 = if (close[-3]-close)/stdev(close-close[6],48) <= -1 then 1 else 0;
#def bull30 = if (close[-6]-close)/stdev(close-close[6],48) >= 1 then 1 else 0;
#def bear30 = if (close[-6]-close)/stdev(close-close[6],48) <= -1 then 1 else 0;
#def bull60 = if (close[-12]-close)/stdev(close-close[12],48) >= 1 then 1 else 0;
#def bear60 = if (close[-12]-close)/stdev(close-close[12],48) <= -1 then 1 else 0;

AddOrder(OrderType.BUY_TO_OPEN, 1, low, 1, Color.White, Color.White,name=
FullK+"|"+diffKD+"|"+OB+"|"+OS+"|"+
vol+"|"+s15+"|"+s30+"|"+s60+"|"+ToD+"|"+Inertias+"|"+
percBB+"|"+spreadRSI+"|"+ADX+"|"+RSI+"|"+WPercent+"|"+acc+"|"+
if bull15 then _up else _in+"|"+
if bear15 then _dn else _in+"|"+
if bull30 then _up else _in+"|"+
if bear30 then _dn else _in+"|"+
if bull60 then _up else _in+"|"+
if bear60 then _dn else _in);

AddOrder(OrderType.SELL_TO_CLOSE, 1, high, 1, Color.White, Color.White, name="SellClose");



##### SECOND EDITION EDITS HERE

AddOrder(OrderType.BUY_TO_OPEN, 1, low, 1, Color.White, Color.White,name=
FT+"|"+FullK+"|"+diffKD+"|"+OB+"|"+OS+"|"+
vol+"|"+s15+"|"+s30+"|"+s60+"|"+ToD+"|"+Inertias+"|"+
percBB+"|"+spreadRSI+"|"+ADX+"|"+RSI+"|"+WPercent+"|"+acc+"|"+
if class==4 then _up else
if class==3 then _upR else
if class==2 then _dnR else
if class==1 then _dn else "ERR");